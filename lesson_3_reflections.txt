When would you want to create a remote repository rather than keeping all your work local?

    Whenever you want to share code with others, or back your work up on the cloud.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

    Recall the issues related to merging, and apply them here. Besides, you want to remain
    in control of what changes occur to your code, and you can't do that with an automated
    updating system.


Describe the differences between forks, clones, and branches. When would you use one 
instead of the other?

    Forks directly recreate a repository on GitHub itself. Clones recreate them on the 
    local machine. Branches simply represent a different version of the same repository.
    Forks are for making permanent changes without altering the original repository, 
    clones are for recreating the information somewhere you can access and alter locally,
    and branches are for tweaking the code in a specific way to later be merged back.

What is the benefit of having a copy of the last known state of the remote stored locally?

    Mostly to circumvent connectivity issues. Otherwise, it's easier and more accurate
    to consult the GitHub remote itself.

